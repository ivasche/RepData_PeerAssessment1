{
    "contents" : "# Reproducible Research: Peer Assessment 1\n\nThis is a complete report for the project.\nAll displayed code is written assuming that a project dir is a working dir.\n\n## Loading and preprocessing the data\n\nFirst we read an unzipped dataset choosing appropriate formats for variables.\n```{r readzipfile}\ndata<-read.csv(unzip(\"activity.zip\"),colClasses=c(\"numeric\",\"Date\",\"factor\"))\n```\n\n## What is mean total number of steps taken per day?\n\nThis chunk of code plots histograms of steps taken each day using lattice package.\n```{r histogram}\nlibrary(lattice)\nhistogram(~steps|as.factor(date),data,par.strip.text=list(cex=0.7))\n```\n\nAnd this piece computes and returns a table with daily mean and median values.\n```{r meanmedian}\nsteps.mm<-as.data.frame(sapply(split(data$steps,as.factor(data$date)),mean,na.rm=T))\nnames(steps.mm)<-\"Mean\"\nsteps.mm$Median<-sapply(split(data$steps,as.factor(data$date)),median,na.rm=T)\nprint(steps.mm)\n```\n\n## What is the average daily activity pattern?\n\nFirst we compile a data frame with average number of steps per interval.\n```{r stepsperinterval}\nsteps.int<-as.data.frame(sapply(split(data$steps,data$interval),mean,na.rm=T))\nsteps.int$interval<-as.numeric(rownames(steps.int))\nnames(steps.int)<-c(\"steps\",\"interval\")\nsteps.int<-steps.int[order(steps.int$interval),]\n```\n\nUsing the data frame constructed above one can build a graph with average number of steps taken in each interval.\n```{r stepsperinterval_chart}\nplot(x=steps.int$interval,y=steps.int$steps,type=\"l\",xlab=\"Interval\",ylab=\"Number of steps\",lwd=2)\n```\n\nThe following chunck computes and properly formats a 5-min interval with a max average number of steps.\n```{r maxstepsperinterval}\nm<-as.character(steps.int[(order(steps.int$steps,decreasing=T)),][1,2])\nmax<-paste0(substr(m,1,1),\":\",substr(m,2,3))\n```\n\nThe 5-min interval with a maximum average number of steps is an interval starting at `r max`.\n\n## Imputing missing values\n\nThis piece calculates the total number of missing entries.\n```{r totalnas}\ntot.na<-sum(is.na(data$steps))\n```\n\nThere're total `r tot.na` NAs in the data set.\n\nThe following chunk replaces NAs in the original dataset with average values per corresponding time interval using the 'plyr' package. New 'clean' dataset is saved.\n```{r replacenas}\nlibrary(plyr)\ndata.nonas<-join(data,steps.int,\"interval\")\nfor(i in seq_along(data$steps)){\n      if(is.na(data.nonas[i,1])==TRUE){\n            data.nonas[i,1]<-data.nonas[i,4]\n      }\n}\ndata.nonas<-data.nonas[,1:3]\n```\n\nUsing a 'clean' dataset created above we calculate daily sums of steps taken.\n```{r summeanmedian_nonas}\nsteps.sum.nonas<-as.data.frame(sapply(split(data.nonas$steps,as.factor(data.nonas$date)),sum,na.rm=T))\nnames(steps.sum.nonas)<-\"Sum\"\n```\n\nHere's a histogram of a total number of daily steps.\n```{r histsum_nonas}\nhist(steps.sum.nonas$Sum,xlab=\"\",main=\"Total daily number of steps histogram\")\n```\n\nMean total daily steps taken (rounded) are `r as.integer(mean(steps.sum.nonas$Sum))`, median is `r as.integer(median(steps.sum.nonas$Sum))`. Both values are higher compared to ones computed ignoring NAs in the dataset. This is due to chosen NAs replacement strategy (average values per corresponding interval).\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nLet's first create a new factor variable with 'weekday' and 'weekend' levels.\n```{r weekdays}\ndata.nonas$weekday<-weekdays(data.nonas$date)\nfor(i in seq_along(data.nonas$weekday)){\n      if(data.nonas$weekday[i]==\"Saturday\"){\n            data.nonas$weekday[i]<-\"weekend\"\n      }else if(data.nonas$weekday[i]==\"Sunday\"){\n            data.nonas$weekday[i]<-\"weekend\"\n      }else{\n            data.nonas$weekday[i]<-\"weekday\"\n      }\n}\ndata.nonas$weekday<-as.factor(data.nonas$weekday)\n```\n\nNow we create a new data frame with average number of steps per interval splitting out weekdays and weekends.\n```{r weekdays_split}\nl<-split(data.nonas,data.nonas$weekday)\nsteps.int.nonas<-as.data.frame(sapply(l,function(x){sapply(split(x,x[,3]),function(y){mean(y[,1])})}))\nsteps.int.nonas$interval<-as.numeric(rownames(steps.int.nonas))\nsteps.int.nonas<-steps.int.nonas[order(steps.int.nonas$interval),]\n```\n\nFinally we plot average number of steps per time interval for weekdays and weekends.\n```{r weekdays_plot}\npar(mfrow=c(1,2))\nplot(x=steps.int.nonas$interval,y=steps.int.nonas$weekday,type=\"l\",xlab=\"Interval\",ylab=\"Number of steps\",main=\"Weekdays\",ylim=c(0,250),cex.axis=0.8)\nplot(x=steps.int.nonas$interval,y=steps.int.nonas$weekend,type=\"l\",xlab=\"Interval\",ylab=\"Number of steps\",main=\"Weekends\",ylim=c(0,250),cex.axis=0.8)\n```\n",
    "created" : 1400059490695.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2082301561",
    "id" : "DC8C899A",
    "lastKnownWriteTime" : 1400076717,
    "path" : "D:/Documents/Documents/Coursera/Reproducible Research/Project 1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}